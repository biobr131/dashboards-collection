services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      - TZ=Asia/Tokyo
    env_file:
      - ./postgres/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  jupyter:
    image: biobr131/dashboards-collection-jupyter:latest
    container_name: jupyter
    build: 
      context: .
      dockerfile: ./dockerfiles/prod/Dockerfile.jupyter
      args:
        SERVICE_DIR: "notebooks"
        POSTGRE_DIR: "postgres"
        ENV_YML: "environment.yaml"
        VENV: "pharma-data-science"
        REQ_DIR: "requirements"
        REQ_TXT: "prod.txt"
    command: mamba run --name pharma-data-science jupyter lab --ip=0.0.0.0 --allow-root --LabApp.token='' --ServerApp.base_url=/jupyter/ --ServerApp.trust_xheaders=True
    ports:
     - "8888:8888"
    volumes:
     - ./notebooks:/usr/src
    tty: true
    stdin_open: true
    depends_on:
      - postgres
  rstudio:
    image: biobr131/dashboards-collection-rstudio:latest
    container_name: rstudio
    build: 
      context: .
      dockerfile: ./dockerfiles/prod/Dockerfile.rstudio
      args:
        SERVICE_DIR: "rstudio"
        POSTGRE_DIR: "postgres"
    environment:
      - TZ=Asia/Tokyo
    env_file:
      - ./rstudio/.env
    ports:
     - "8787:8787"
    volumes:
     - ./rstudio/R/bioconductor_docker:/usr/local/lib/R/host-site-library
     - ./rstudio/R/data:/home/rstudio
    tty: true
    stdin_open: true
  streamlit:
    image: biobr131/dashboards-collection-streamlit:latest
    container_name: streamlit
    build: 
      context: .
      dockerfile: ./dockerfiles/prod/Dockerfile.streamlit
      args:
        SERVICE_DIR: "streamlit_app"
        POSTGRE_DIR: "postgres"
        REQ_DIR: "requirements"
        REQ_TXT: "prod.txt"
    command: streamlit hello
    ports:
      - "8501:8501"
    volumes:
      - ./streamlit_app:/usr/src
    tty: true
    stdin_open: true
    depends_on:
      - postgres
  django:
    image: biobr131/dashboards-collection-django:latest
    container_name: django
    build:
      context: .
      dockerfile: ./dockerfiles/prod/Dockerfile.django
      args:
        SERVICE_DIR: "django_app"
        POSTGRE_DIR: "postgres"
        REQ_DIR: "requirements"
        REQ_TXT: "prod.txt"
    command: gunicorn config.wsgi.prod:application --bind 0.0.0.0:8000
    volumes:
      - ./django_app:/usr/src
    expose:
      - "8000"
    env_file:
      - ./django_app/postgres/.env
    depends_on:
      - postgres
  flask:
    image: biobr131/dashboards-collection-flask:latest
    container_name: flask
    build: 
      context: .
      dockerfile: ./dockerfiles/prod/Dockerfile.flask
      args:
        SERVICE_DIR: "flask_app"
        POSTGRE_DIR: "postgres"
        REQ_DIR: "requirements"
        REQ_TXT: "prod.txt"
    command: gunicorn main:app -b 0.0.0.0:5000
    volumes:
      - ./flask_app:/usr/src
    expose:
      - "5000"
    env_file:
      - ./flask_app/postgres/.env
    depends_on:
      - postgres
  fastapi:
    image: biobr131/dashboards-collection-fastapi:latest
    container_name: fastapi
    build: 
      context: .
      dockerfile: ./dockerfiles/prod/Dockerfile.fastapi
      args:
        SERVICE_DIR: "fastapi_app"
        POSTGRE_DIR: "postgres"
        REQ_DIR: "requirements"
        REQ_TXT: "prod.txt"
    environment:
      - DEBUG=False
    command: uvicorn main:app --host=0.0.0.0 --port=8001
    volumes:
      - ./fastapi_app:/usr/src
    expose:
      - "8001"
    depends_on:
      - postgres
  nginx:
    image: biobr131/dashboards-collection-nginx:latest
    container_name: nginx
    build: 
      context: .
      dockerfile: ./dockerfiles/prod/Dockerfile.nginx
    ports:
      - "80:80"
    depends_on:
      - rstudio

volumes:
  postgres_data:
