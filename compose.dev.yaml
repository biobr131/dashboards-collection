services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      - TZ=Asia/Tokyo
    env_file:
      - ./postgres/.env.dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  jupyter:
    build: 
      context: ./notebooks
      args:
        DIR_WORK: "usr/src"
        ENV_YML: "environment.yaml"
        VENV: "pharma-data-science"
        REQ_DIR: "requirements"
        REQ_TXT: "dev.txt"
    image: biobr131/dashboards-collection-jupyter-dev:latest
    container_name: jupyter
    command: mamba run --name pharma-data-science jupyter lab --ip=0.0.0.0 --allow-root --LabApp.token='' --ServerApp.base_url=/jupyter/ --ServerApp.trust_xheaders=True
    ports:
     - "8888:8888"
    volumes:
     - ./notebooks:/usr/src
    tty: true
    stdin_open: true
    depends_on:
      - postgres
  rstudio:
    build: ./rstudio
    image: biobr131/dashboards-collection-rstudio:latest
    container_name: rstudio
    environment:
      - TZ=Asia/Tokyo
    env_file:
      - ./rstudio/.env
    ports:
     - "8787:8787"
    volumes:
     - ./rstudio/R/bioconductor_docker:/usr/local/lib/R/host-site-library
     - ./rstudio/R/data:/home/rstudio
    tty: true
    stdin_open: true
  streamlit:
    build: 
      context: ./streamlit_app
      args:
        REQ_DIR: "requirements"
        REQ_TXT: "dev.txt"
    image: biobr131/dashboards-collection-streamlit-dev:latest
    container_name: streamlit
    command: streamlit hello
    ports:
      - "8501:8501"
    volumes:
      - ./streamlit_app:/usr/src
    tty: true
    stdin_open: true
    depends_on:
      - postgres
  django:
    image: biobr131/dashboards-collection-django-dev:latest
    container_name: django
    build:
      context: ./django_app
      args:
        REQ_DIR: "requirements"
        REQ_TXT: "dev.txt"
    command: gunicorn config.wsgi.dev:application --bind 0.0.0.0:8000
    volumes:
      - ./django_app:/usr/src
    expose:
      - "8000"
    env_file:
      - ./django_app/postgres/.env.dev
    depends_on:
      - postgres
  flask:
    image: biobr131/dashboards-collection-flask-dev:latest
    container_name: flask
    build: 
      context: ./flask_app
      args:
        REQ_DIR: "requirements"
        REQ_TXT: "dev.txt"
    command: gunicorn main:app -b 0.0.0.0:5000
    volumes:
      - ./flask_app:/usr/src
    expose:
      - "5000"
    env_file:
      - ./flask_app/postgres/.env.dev
    depends_on:
      - postgres
  nginx:
    image: biobr131/dashboards-collection-nginx-dev:latest
    container_name: nginx
    build: ./nginx/Dockerfile.dev
    ports:
      - "80:80"
    depends_on:
      - jupyter

volumes:
  postgres_data:
